// Farmago Web - Core functionality
const API_URL='https://farmago-web-api.onrender.com';
const strings={
  ru:{
    tagline:'–î–µ—à–µ–≤—ã–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤ –ì—Ä—É–∑–∏–∏',
    search_placeholder:'–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞...',
    search_button:'–ù–∞–π—Ç–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ',
    results_title:'–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞',
    about_title:'–û Farmago',
    about_description:'Farmago ‚Äî –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —Å—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã –Ω–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤ –∞–ø—Ç–µ–∫–∞—Ö –ì—Ä—É–∑–∏–∏.',
    view_pharmacy:'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞'
  },
  ka:{
    tagline:'·Éò·Éê·É§·Éò ·É¨·Éê·Éõ·Éö·Éî·Éë·Éò ·É°·Éê·É•·Éê·É†·Éó·Éï·Éî·Éö·Éù·É®·Éò',
    search_placeholder:'·É®·Éî·Éò·Éß·Éï·Éê·Éú·Éî·Éó ·É¨·Éê·Éõ·Éö·Éò·É° ·Éì·Éê·É°·Éê·ÉÆ·Éî·Éö·Éî·Éë·Éê...',
    search_button:'·Éõ·Éî·Éì·Éò·Éô·Éê·Éõ·Éî·Éú·É¢·Éî·Éë·Éò·É° ·É´·Éî·Éë·Éú·Éê',
    results_title:'·É´·Éò·Éî·Éë·Éò·É° ·É®·Éî·Éì·Éî·Éí·Éî·Éë·Éò',
    about_title:'Farmago-·É° ·É®·Éî·É°·Éê·ÉÆ·Éî·Éë',
    about_description:'Farmago ‚Äî ·É°·É¨·É†·Éê·É§·Éò ·Éí·Éñ·Éê ·É¨·Éê·Éõ·Éö·Éî·Éë·Éò·É° ·É§·Éê·É°·Éî·Éë·Éò·É° ·É®·Éî·É°·Éê·Éì·Éê·É†·Éî·Éë·Éö·Éê·Éì ·É°·Éê·É•·Éê·É†·Éó·Éï·Éî·Éö·Éù·É° ·Éê·É§·Éó·Éò·Éê·É•·Éî·Éë·É®·Éò.',
    view_pharmacy:'·Éú·Éê·ÉÆ·Éï·Éê'
  }
};
let state={lang:localStorage.getItem('farmago_lang')||'ru',query:'',data:null};
function t(k){return strings[state.lang]?.[k]||strings.ru[k]||k;}
function clean(v){if(!v)return'';const s=String(v).trim();return['nan','NaN','none','None','null','undefined'].includes(s)?'':s;}
function getTitle(item){
  if(state.lang==='ka')return clean(item.title)||clean(item.name)||clean(item.title_russian)||'·É£·É™·Éú·Éù·Éë·Éò';
  return clean(item.title_russian)||clean(item.title_english)||clean(item.title)||'–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
}
function init(){
  console.log('Farmago init');
  document.querySelectorAll('.lang-btn').forEach(btn=>{
    btn.onclick=()=>{state.lang=btn.dataset.lang;updateUI();localStorage.setItem('farmago_lang',state.lang);};
  });
  updateUI();
}
function updateUI(){
  document.querySelectorAll('.lang-btn').forEach(btn=>btn.classList.toggle('active',btn.dataset.lang===state.lang));
  document.querySelectorAll('[data-key]').forEach(el=>{
    const text=t(el.dataset.key);
    if(el.tagName==='INPUT')el.placeholder=text;else el.textContent=text;
  });
}
document.addEventListener('DOMContentLoaded',init);

// Add missing search functionality
function handleSearch(){
  const query=document.getElementById('searchInput').value.trim();
  if(!query)return;
  state.query=query;
  searchMedicines(query);
}

async function searchMedicines(query){
  console.log('Searching for:',query);
  showLoading(true);
  try{
    const url=new URL(`${API_URL}/search`);
    url.searchParams.set('q',query);
    url.searchParams.set('lang',state.lang);
    const res=await fetch(url.toString());
    console.log('API response:',res.status);
    if(res.status===429){showError('rate_limit');return;}
    if(!res.ok){showError('service');return;}
    const data=await res.json();
    console.log('Data:',data);
    state.data=data;
    renderResults(data);
  }catch(e){
    console.error('Search error:',e);
    showError('network');
  }finally{
    showLoading(false);
  }
}

function showLoading(show){
  document.getElementById('loadingOverlay').classList.toggle('hidden',!show);
  document.getElementById('searchBtn').disabled=show;
}

function showError(type){
  showScreen('empty');
}

function showScreen(name){
  document.getElementById('landingScreen').classList.toggle('hidden',name!=='landing');
  document.getElementById('resultsScreen').classList.toggle('hidden',name!=='results');
  document.getElementById('emptyScreen').classList.toggle('hidden',name!=='empty');
}

function renderResults(data){
  if(!data||!data.ok||(!data.direct?.length&&!data.others?.length)){
    showScreen('empty');return;
  }
  const total=(data.direct||[]).length+(data.others||[]).length;
  document.getElementById('resultsCount').textContent=`¬´${state.query}¬ª ‚Ä¢ ${total} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`;
  let html='';
  if(data.direct?.length){
    html+=`<div class="results-block"><h3 class="block-title">${t('block_direct')||'–ù–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ'}</h3>`;
    data.direct.forEach(item=>html+=renderCard(item));
    html+='</div>';
  }
  if(data.others?.length){
    html+=`<div class="results-block"><h3 class="block-title">${t('block_others')||'–î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã'}</h3>`;
    data.others.forEach(item=>html+=renderCard(item));
    html+='</div>';
  }
  document.getElementById('resultsContent').innerHTML=html;
  showScreen('results');
}

function renderCard(item){
  const title=getTitle(item);
  const price=num(item.price);
  const pharmacy=clean(item['–Ω–∞–∑–≤–∞–Ω–∏–µ –∞–ø—Ç–µ–∫–∏']||item.pharmacy||'‚Äî');
  const url=clean(item.url)||'#';
  return `<div class="drug-card">
    <div class="drug-header">
      <div class="drug-info">
        <div class="drug-name">${title}</div>
      </div>
      <div class="drug-price">${price?price.toFixed(2)+' ‚Çæ':'‚Äî'}</div>
    </div>
    <div class="pharmacy-info">
      <div class="pharmacy-name">${pharmacy}</div>
    </div>
    <a href="${url}" target="_blank" class="pharmacy-link">${t('view_pharmacy')} ${pharmacy.toLowerCase()}.ge üîó</a>
  </div>`;
}

function num(v){const n=Number(v);return Number.isFinite(n)?n:null;}

// Wire up events
document.addEventListener('DOMContentLoaded',()=>{
  document.getElementById('searchBtn').onclick=handleSearch;
  document.getElementById('searchInput').onkeypress=e=>{if(e.key==='Enter')handleSearch();};
  document.getElementById('backBtn').onclick=()=>showScreen('landing');
  document.getElementById('newSearchBtn').onclick=()=>{document.getElementById('searchInput').value='';showScreen('landing');};
  document.getElementById('infoBtn').onclick=()=>document.getElementById('modalOverlay').classList.remove('hidden');
  document.getElementById('modalClose').onclick=()=>document.getElementById('modalOverlay').classList.add('hidden');
  document.getElementById('modalOverlay').onclick=e=>{if(e.target.id==='modalOverlay')e.target.classList.add('hidden');};
});
